{
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.gf_accounts": {
      "name": "gf_accounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "accountType": {
          "name": "accountType",
          "type": "type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "githubId": {
          "name": "githubId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "googleId": {
          "name": "googleId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "salt": {
          "name": "salt",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "user_id_account_type_idx": {
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "accountType",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "with": {},
          "name": "user_id_account_type_idx",
          "isUnique": false,
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "gf_accounts_userId_gf_user_id_fk": {
          "name": "gf_accounts_userId_gf_user_id_fk",
          "tableFrom": "gf_accounts",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "gf_accounts_githubId_unique": {
          "name": "gf_accounts_githubId_unique",
          "columns": [
            "githubId"
          ],
          "nullsNotDistinct": false
        },
        "gf_accounts_googleId_unique": {
          "name": "gf_accounts_googleId_unique",
          "columns": [
            "googleId"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_events": {
      "name": "gf_events",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "groupId": {
          "name": "groupId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "imageId": {
          "name": "imageId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "startsOn": {
          "name": "startsOn",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "gf_events_groupId_gf_group_id_fk": {
          "name": "gf_events_groupId_gf_group_id_fk",
          "tableFrom": "gf_events",
          "columnsFrom": [
            "groupId"
          ],
          "tableTo": "gf_group",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_following": {
      "name": "gf_following",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "foreignUserId": {
          "name": "foreignUserId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "following_user_id_foreign_user_id_idx": {
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "foreignUserId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "with": {},
          "name": "following_user_id_foreign_user_id_idx",
          "isUnique": false,
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "gf_following_userId_gf_user_id_fk": {
          "name": "gf_following_userId_gf_user_id_fk",
          "tableFrom": "gf_following",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "gf_following_foreignUserId_gf_user_id_fk": {
          "name": "gf_following_foreignUserId_gf_user_id_fk",
          "tableFrom": "gf_following",
          "columnsFrom": [
            "foreignUserId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_group": {
      "name": "gf_group",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "isPublic": {
          "name": "isPublic",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "bannerId": {
          "name": "bannerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "info": {
          "name": "info",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "youtubeLink": {
          "name": "youtubeLink",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "discordLink": {
          "name": "discordLink",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "githubLink": {
          "name": "githubLink",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "xLink": {
          "name": "xLink",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        }
      },
      "indexes": {
        "groups_user_id_is_public_idx": {
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "isPublic",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "with": {},
          "name": "groups_user_id_is_public_idx",
          "isUnique": false,
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "gf_group_userId_gf_user_id_fk": {
          "name": "gf_group_userId_gf_user_id_fk",
          "tableFrom": "gf_group",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_invites": {
      "name": "gf_invites",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tokenExpiresAt": {
          "name": "tokenExpiresAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "groupId": {
          "name": "groupId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "gf_invites_groupId_gf_group_id_fk": {
          "name": "gf_invites_groupId_gf_group_id_fk",
          "tableFrom": "gf_invites",
          "columnsFrom": [
            "groupId"
          ],
          "tableTo": "gf_group",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "gf_invites_token_unique": {
          "name": "gf_invites_token_unique",
          "columns": [
            "token"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_magic_links": {
      "name": "gf_magic_links",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tokenExpiresAt": {
          "name": "tokenExpiresAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "magic_links_token_idx": {
          "columns": [
            {
              "expression": "token",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "with": {},
          "name": "magic_links_token_idx",
          "isUnique": false,
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "gf_magic_links_email_unique": {
          "name": "gf_magic_links_email_unique",
          "columns": [
            "email"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_membership": {
      "name": "gf_membership",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "groupId": {
          "name": "groupId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'member'"
        }
      },
      "indexes": {
        "memberships_user_id_group_id_idx": {
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "groupId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "with": {},
          "name": "memberships_user_id_group_id_idx",
          "isUnique": false,
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "gf_membership_userId_gf_user_id_fk": {
          "name": "gf_membership_userId_gf_user_id_fk",
          "tableFrom": "gf_membership",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "gf_membership_groupId_gf_group_id_fk": {
          "name": "gf_membership_groupId_gf_group_id_fk",
          "tableFrom": "gf_membership",
          "columnsFrom": [
            "groupId"
          ],
          "tableTo": "gf_group",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_newsletter": {
      "name": "gf_newsletter",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "gf_newsletter_email_unique": {
          "name": "gf_newsletter_email_unique",
          "columns": [
            "email"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_notifications": {
      "name": "gf_notifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "groupId": {
          "name": "groupId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "postId": {
          "name": "postId",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "isRead": {
          "name": "isRead",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdOn": {
          "name": "createdOn",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "gf_notifications_userId_gf_user_id_fk": {
          "name": "gf_notifications_userId_gf_user_id_fk",
          "tableFrom": "gf_notifications",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "gf_notifications_groupId_gf_group_id_fk": {
          "name": "gf_notifications_groupId_gf_group_id_fk",
          "tableFrom": "gf_notifications",
          "columnsFrom": [
            "groupId"
          ],
          "tableTo": "gf_group",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_posts": {
      "name": "gf_posts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "groupId": {
          "name": "groupId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdOn": {
          "name": "createdOn",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "gf_posts_userId_gf_user_id_fk": {
          "name": "gf_posts_userId_gf_user_id_fk",
          "tableFrom": "gf_posts",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "gf_posts_groupId_gf_group_id_fk": {
          "name": "gf_posts_groupId_gf_group_id_fk",
          "tableFrom": "gf_posts",
          "columnsFrom": [
            "groupId"
          ],
          "tableTo": "gf_group",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_profile": {
      "name": "gf_profile",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "displayName": {
          "name": "displayName",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "imageId": {
          "name": "imageId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "gf_profile_userId_gf_user_id_fk": {
          "name": "gf_profile_userId_gf_user_id_fk",
          "tableFrom": "gf_profile",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "gf_profile_userId_unique": {
          "name": "gf_profile_userId_unique",
          "columns": [
            "userId"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_replies": {
      "name": "gf_replies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "postId": {
          "name": "postId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "groupId": {
          "name": "groupId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdOn": {
          "name": "createdOn",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "replies_post_id_idx": {
          "columns": [
            {
              "expression": "postId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "with": {},
          "name": "replies_post_id_idx",
          "isUnique": false,
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "gf_replies_userId_gf_user_id_fk": {
          "name": "gf_replies_userId_gf_user_id_fk",
          "tableFrom": "gf_replies",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "gf_replies_postId_gf_posts_id_fk": {
          "name": "gf_replies_postId_gf_posts_id_fk",
          "tableFrom": "gf_replies",
          "columnsFrom": [
            "postId"
          ],
          "tableTo": "gf_posts",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "gf_replies_groupId_gf_group_id_fk": {
          "name": "gf_replies_groupId_gf_group_id_fk",
          "tableFrom": "gf_replies",
          "columnsFrom": [
            "groupId"
          ],
          "tableTo": "gf_group",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_reset_tokens": {
      "name": "gf_reset_tokens",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tokenExpiresAt": {
          "name": "tokenExpiresAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "reset_tokens_token_idx": {
          "columns": [
            {
              "expression": "token",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "with": {},
          "name": "reset_tokens_token_idx",
          "isUnique": false,
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "gf_reset_tokens_userId_gf_user_id_fk": {
          "name": "gf_reset_tokens_userId_gf_user_id_fk",
          "tableFrom": "gf_reset_tokens",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "gf_reset_tokens_userId_unique": {
          "name": "gf_reset_tokens_userId_unique",
          "columns": [
            "userId"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_session": {
      "name": "gf_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "sessions_user_id_idx": {
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "with": {},
          "name": "sessions_user_id_idx",
          "isUnique": false,
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "gf_session_userId_gf_user_id_fk": {
          "name": "gf_session_userId_gf_user_id_fk",
          "tableFrom": "gf_session",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_subscriptions": {
      "name": "gf_subscriptions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "stripeSubscriptionId": {
          "name": "stripeSubscriptionId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stripeCustomerId": {
          "name": "stripeCustomerId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stripePriceId": {
          "name": "stripePriceId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "subscriptions_stripe_subscription_id_idx": {
          "columns": [
            {
              "expression": "stripeSubscriptionId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "with": {},
          "name": "subscriptions_stripe_subscription_id_idx",
          "isUnique": false,
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "gf_subscriptions_userId_gf_user_id_fk": {
          "name": "gf_subscriptions_userId_gf_user_id_fk",
          "tableFrom": "gf_subscriptions",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "gf_subscriptions_userId_unique": {
          "name": "gf_subscriptions_userId_unique",
          "columns": [
            "userId"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_user": {
      "name": "gf_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "gf_user_email_unique": {
          "name": "gf_user_email_unique",
          "columns": [
            "email"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    },
    "public.gf_verify_email_tokens": {
      "name": "gf_verify_email_tokens",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tokenExpiresAt": {
          "name": "tokenExpiresAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "verify_email_tokens_token_idx": {
          "columns": [
            {
              "expression": "token",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "with": {},
          "name": "verify_email_tokens_token_idx",
          "isUnique": false,
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "gf_verify_email_tokens_userId_gf_user_id_fk": {
          "name": "gf_verify_email_tokens_userId_gf_user_id_fk",
          "tableFrom": "gf_verify_email_tokens",
          "columnsFrom": [
            "userId"
          ],
          "tableTo": "gf_user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "gf_verify_email_tokens_userId_unique": {
          "name": "gf_verify_email_tokens_userId_unique",
          "columns": [
            "userId"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "isRLSEnabled": false,
      "checkConstraints": {}
    }
  },
  "enums": {
    "public.type": {
      "name": "type",
      "schema": "public",
      "values": [
        "email",
        "google",
        "github"
      ]
    },
    "public.role": {
      "name": "role",
      "schema": "public",
      "values": [
        "member",
        "admin"
      ]
    }
  },
  "schemas": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "id": "67dc3531-8763-4567-bcdd-ee0a5d576ac1",
  "prevId": "3a006852-790d-483b-8188-e11f6b13c1fd",
  "sequences": {},
  "policies": {},
  "views": {},
  "roles": {}
}